@using BasicBlazorLibrary.Components.BaseClasses
@using BasicBlazorLibrary.Components.CssGrids
@inherits JavascriptComponentBase
@typeparam T
@attribute [CascadingTypeParameter(nameof(T))]
@{
    int x = 0;
}
@if (RenderList == null || ChildContent == null || DataContext == null || RenderList.Count == 0)
{
    return;
}
<div tabindex="1" @ref="_main" class="@GetClass" style="width: @Width; height: @Height;">
    <GridContainer>
        @foreach (var item in RenderList)
        {
            int y;
            int z;
            y = x;
            z = y + 1;
            <GridItem Row="z">
                @if (y == DataContext.ElementScrollTo)
                {
                    <div @onclick="() => ElementClicked(y)" class="customdiv" style="@GetColorStyle(y)" @ref="_reference">
                        @ChildContent(item)
                    </div>
                }
                else
                {
                    <div @onclick="() => ElementClicked(y)" class="customdiv" style="@GetColorStyle(y)">
                        @ChildContent(item)
                    </div>
                }
            </GridItem>
            x++;
        }
    </GridContainer>
</div>